#pragma once

#include "Sprite.h"
#include "AnimationManager.h"
#include "TextureManager.h"

const std::string DIAMOND_IMG = "../Image/Animation/diamond.png";
const int FLAMES_DIAMOND = 8;
const int DIAMOND_W = 576;
const int DIAMOND_H = 512;
const int DIAMOND_REAL_W = DIAMOND_W/DIAMOND_SCALE;
const int DIAMOND_REAL_H = DIAMOND_H/DIAMOND_SCALE;
const int RANGE_FLAME_DIAMOND = 165+576;
const int CLIPS_DIAMOND[FLAMES_DIAMOND][4] = {
    {70+RANGE_FLAME_DIAMOND*0, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*1, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*2, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*3, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*4, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*5, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*6, 0, 576, 512},
    {70+RANGE_FLAME_DIAMOND*7, 0, 576, 512}
};


const std::string DIAMONDCOLLAPSION_IMG = "../Image/Animation/diamondcollapsion.png";
const int FLAMES_DIAMONDCOLLAPSION = 16;
const int DIAMONDCOLLAPSION_W = 180;
const int DIAMONDCOLLAPSION_H = 180;
const int DIAMONDCOLLAPSION_REAL_W = DIAMONDCOLLAPSION_W/DIAMONDCOLLAPSION_SCALE;
const int DIAMONDCOLLAPSION_REAL_H = DIAMONDCOLLAPSION_H/DIAMONDCOLLAPSION_SCALE;
const int RANGE_FLAME_DIAMONDCOLLAPSION = 180;
const int CLIPS_DIAMONDCOLLAPSION[FLAMES_DIAMONDCOLLAPSION][4] = {
    {RANGE_FLAME_DIAMONDCOLLAPSION*0, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*1, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*2, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*3, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*4, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*5, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*6, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*7, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*8, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*9, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*10, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*11, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*12, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*13, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*14, 0, 180, 180},
    {RANGE_FLAME_DIAMONDCOLLAPSION*15, 0, 180, 180}
};


const std::string EVILBIRD_IMG = "../Image/Animation/evilbird.png";
// SDL_Texture* EVILBIRD_TEXTURE = TextureManager::loadTexture(EVILBIRD_IMG);
const int FLAMES_EVILBIRD = 8;
const int EVILBIRD_W = 342;
const int EVILBIRD_H = 280;
const int EVILBIRD_REAL_W = EVILBIRD_W/EVILBIRD_SCALE;
const int EVILBIRD_REAL_H = EVILBIRD_H/EVILBIRD_SCALE;
const int RANGE_FLAME_EVILBIRD = 601;
const int CLIPS_EVILBIRD[FLAMES_EVILBIRD][4] = {
    {120+RANGE_FLAME_EVILBIRD*0, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*1, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*2, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*3, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*4, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*5, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*6, 116, 342, 280},
    {120+RANGE_FLAME_EVILBIRD*7, 116, 342, 280}
};


struct Enemy {

    Sprite enemy_spr;
    Sprite collapsion_spr;
    Animation *enemy_ani;
    Animation *collapsion_ani;
    int delay_spr = 0;

    Enemy();
    Enemy(Animation* ani);
    Enemy(Animation* _enemy_ani, Animation* _collapsion_ani);

    void init();
    void update();
    void updateEnemy(Pos &pos);
    void updateCollapsion(Pos &pos);
    void renderEnemy(Pos &pos);
    void renderCollapsion(Pos &pos);

};